{"version":3,"sources":["e:/Code/pixi/node_modules/browser-pack/_prelude.js","js/main.js","e:/Code/pixi/js/audioPlayer.js","e:/Code/pixi/js/background.js","e:/Code/pixi/js/bird.js","e:/Code/pixi/js/game.js","e:/Code/pixi/js/level.js","e:/Code/pixi/js/settings.js","e:/Code/pixi/js/setup.js","e:/Code/pixi/js/utils.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\r\n    let game = require('./game');\r\n    game.start();\r\n})();\r\n\r\n","let settings = require('./settings');\r\n\r\nlet audioPlayer = {\r\n\r\n    audioFragments: {\r\n        'FLAP': 'sfx_wing.ogg',\r\n        'HIT': 'sfx_hit.ogg',\r\n        'DIE': 'sfx_die.ogg',\r\n        'POINT': 'sfx_point.ogg',\r\n        'SWIM': 'sfx_blub.ogg',\r\n        'ENTER_WATER': 'sfx_water-enter.ogg',\r\n        'EXIT_WATER': 'sfx_water-exit.ogg',\r\n    },\r\n\r\n    _audio: [],\r\n\r\n    init() {\r\n        // Todo: Maybe we need to wait with starting the game until these have been loaded\r\n        for (let key in this.audioFragments) {\r\n            this._audio[this.audioFragments[key]] = new Audio(settings.soundsPath + this.audioFragments[key]);\r\n        }\r\n    },\r\n\r\n    play(audioFragment, callback) {\r\n        if (this._audio[audioFragment].currentTime > 0) {\r\n            this._audio[audioFragment].currentTime = 0;\r\n        }\r\n\r\n        this._audio[audioFragment].play();\r\n\r\n        if (typeof callback === 'function')\r\n            setTimeout(callback, this._audio[audioFragment].duration * 1000);\r\n    }\r\n};\r\n\r\naudioPlayer.init();\r\n\r\n\r\nmodule.exports = audioPlayer;\r\n","let settings = require('./settings.js');\r\nlet utils = require('./utils.js');\r\n\r\nvar background = {\r\n    /**\r\n     * The container that will contain all background tiles lined up\r\n     */\r\n    backgroundSprite: undefined,\r\n\r\n    /**\r\n     * The width of one background tile, is needed in some calculations/checks\r\n     */\r\n    skyTileWidth: 0,\r\n\r\n    initialize() {\r\n        let skyTileTexture = utils.getTexture(settings.textures.background)\r\n        this.backgroundSprite = new PIXI.extras.TilingSprite(skyTileTexture, window.innerWidth, skyTileTexture.height);\r\n        this.backgroundSprite.y = settings.playableAreaAboveWater - skyTileTexture.height + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return this;\r\n    },\r\n\r\n    loop() {\r\n        this.backgroundSprite.tilePosition.x += -settings.backgroundSpeed;\r\n    },\r\n\r\n    /**\r\n     * Get the element that needs to be rendered\r\n     * @returns {Container}\r\n     */\r\n    getElement() {\r\n        return this.backgroundSprite;\r\n    }\r\n};\r\n\r\nmodule.exports = background;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nlet audioPlayer = require('./audioPlayer');\r\n\r\nlet bird = {\r\n    container: undefined,\r\n    bird: undefined,\r\n    boundingBox: undefined,\r\n    velocity: {x: 0, y: 0},\r\n    isBelowWater: false,\r\n\r\n    animationFrames: 4,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n\r\n        let spriteFrames = [];\r\n        for (let i = 0; i < this.animationFrames; i++) {\r\n            spriteFrames.push(utils.getTexture('bird_' + i +  '.png'));\r\n        }\r\n        this.bird = new PIXI.extras.AnimatedSprite(spriteFrames);\r\n\r\n        this.bird.animationSpeed = 0.2;\r\n        this.bird.play();\r\n\r\n        this.bird.anchor.x = 0.5;\r\n        this.bird.anchor.y = 0.5;\r\n\r\n        this.bird.y = 150;\r\n        this.bird.x = 100;\r\n\r\n        this.container.addChild(this.bird);\r\n\r\n        this.boundingBox = {x: 0, y: 0, width: 0, height: 0};\r\n\r\n        return this;\r\n    },\r\n\r\n    loop() {\r\n        if (this.isBelowWater) {\r\n            this.belowWater();\r\n        } else {\r\n            this.aboveWater();\r\n        }\r\n\r\n        this.bird.y += this.velocity.y;\r\n        this.bird.rotation = Math.atan2(this.velocity.y, settings.forwardSpeed);\r\n    },\r\n\r\n    aboveWater() {\r\n        this.velocity.y += settings.gravity;\r\n    },\r\n\r\n    belowWater() {\r\n        this.velocity.y -= settings.waterPushForce;\r\n    },\r\n\r\n    flap() {\r\n        if (settings.shouldBirdFlapResetVelocity ) {\r\n            this.velocity.y = 0;\r\n        }\r\n\r\n        if (this.isBelowWater) {\r\n            this._swim();\r\n        } else {\r\n            this._flap();\r\n        }\r\n    },\r\n\r\n    reset() {\r\n        this.bird.y = 150;\r\n        this.bird.x = 100;\r\n        this.velocity.x = 0;\r\n        this.velocity.y = 0;\r\n    },\r\n\r\n    getElement() {\r\n        return this.bird;\r\n    },\r\n\r\n    getTop() {\r\n        return this.bird.y - this.bird.height / 2;\r\n    },\r\n\r\n    getBottom() {\r\n        return this.bird.y + this.bird.height / 2;\r\n    },\r\n\r\n    getRight() {\r\n        return this.bird.x + this.bird.width / 2;\r\n    },\r\n\r\n    getLeft() {\r\n        return this.bird.x - this.bird.width / 2;\r\n    },\r\n\r\n    enterWater() {\r\n        if (this.isBelowWater) return;\r\n        this.isBelowWater = true;\r\n\r\n        audioPlayer.play(audioPlayer.audioFragments.ENTER_WATER);\r\n    },\r\n\r\n    leaveWater() {\r\n        if (!this.isBelowWater) return;\r\n        this.isBelowWater = false;\r\n\r\n        audioPlayer.play(audioPlayer.audioFragments.EXIT_WATER);\r\n    },\r\n\r\n    _flap() {\r\n        audioPlayer.play(audioPlayer.audioFragments.FLAP);\r\n\r\n        this.velocity.y -= settings.birdFlapVelocity;\r\n    },\r\n\r\n    _swim() {\r\n        audioPlayer.play(audioPlayer.audioFragments.SWIM);\r\n\r\n        this.velocity.y += settings.birdFlapVelocity;\r\n    }\r\n};\r\n\r\nmodule.exports = bird;\r\n","let setup = require('./setup');\r\nlet background = require('./background');\r\nlet level = require('./level');\r\nlet bird = require('./bird');\r\n\r\nlet audioPlayer = require('./audioPlayer');\r\nlet settings =  require('./settings');\r\nimport * as utils from \"./utils\";\r\n\r\nlet game = {\r\n\r\n    renderer: undefined,\r\n    stage: undefined,\r\n    gameOverContainer: undefined,\r\n\r\n\r\n    hasStopped: false,\r\n\r\n    /**\r\n     * Start the game\r\n     */\r\n    start() {\r\n        this.renderer  = setup.renderer();\r\n        setup.loadAssets(this.initialize.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Initialize all required parts of the game\r\n     */\r\n    initialize() {\r\n        this.stage = new PIXI.Container();\r\n\r\n        background.initialize();\r\n        this.stage.addChild(background.getElement());\r\n\r\n        level.initialize();\r\n        this.stage.addChild(level.getElement());\r\n\r\n        bird.initialize();\r\n        this.stage.addChild(bird.getElement());\r\n\r\n        // Render the water\r\n        let waterTexture = utils.getTexture(settings.textures.WATER);\r\n        let waterSprite = new PIXI.extras.TilingSprite(waterTexture, window.innerWidth, settings.playableAreaBelowWater);\r\n        waterSprite.y = utils.getTexture(settings.textures.ceiling).height + settings.playableAreaAboveWater;\r\n        this.stage.addChild(waterSprite);\r\n\r\n        this.stage.addChild(this._createGameOverScreen());\r\n\r\n        this.renderer.render(this.stage);\r\n\r\n        // Todo: Add proper input handling\r\n        window.addEventListener(\"keyup\", (e) => {\r\n            if (e.keyCode != 32) return; // Not spacebar\r\n            if (this.hasStopped) {\r\n                this._clickRestart();\r\n            } else {\r\n                bird.flap();\r\n            }\r\n        }, false);\r\n\r\n        if (\"ontouchstart\" in window)\r\n            window.addEventListener(\"touchstart\", () => {\r\n                if (this.hasStopped) return;\r\n                bird.flap();\r\n            });\r\n        else\r\n            window.addEventListener(\"mousedown\", () => {\r\n                if (this.hasStopped) return;\r\n                bird.flap();\r\n            });\r\n\r\n        this.loop();\r\n    },\r\n\r\n    /**\r\n     * The game loop\r\n     */\r\n    loop() {\r\n        requestAnimationFrame(this.loop.bind(this));\r\n\r\n        // This basically causes the game to 'freeze'. This should change the updating to menu and such\r\n        if (this.hasStopped) return;\r\n\r\n        background.loop();\r\n        level.loop();\r\n        bird.loop();\r\n\r\n        // Check if the bird is below or underneath the water\r\n        if (bird.getTop() < level.getWaterLevel() && bird.isBelowWater) {\r\n            bird.leaveWater();\r\n        } else if (bird.getTop() >= level.getWaterLevel() && !bird.isBelowWater) {\r\n            bird.enterWater();\r\n        }\r\n\r\n        // Ceiling collision\r\n        if (bird.getTop() <= level.ceilingSprite.y + level.ceilingSprite.height) {\r\n            this.gameOver();\r\n        }\r\n\r\n        // Floor collision\r\n        if (bird.getBottom() >= level.ceilingSprite.y + level.ceilingSprite.height + settings.playableAreaAboveWater + settings.playableAreaBelowWater) {\r\n            this.gameOver();\r\n        }\r\n\r\n        if (level.pipeCollision(bird)) {\r\n            this.gameOver();\r\n        }\r\n\r\n        this.renderer.render(this.stage);\r\n    },\r\n\r\n    gameOver() {\r\n        this.stop();\r\n        this._playDieAudio();\r\n\r\n        // Show game over screen\r\n        this.gameOverContainer.removeChild(this.scoreSprite);\r\n        this.gameOverContainer.removeChild(this.bestScoreSprite);\r\n\r\n        this.scoreSprite = utils.scoreToSprites(level.score, utils.scoreSize.SMALL);\r\n        this.scoreSprite.x = this.gameOverScreen.width / 2 - this.scoreSprite.width / 2 + 2;\r\n        this.scoreSprite.y = 93;\r\n\r\n        this.bestScoreSprite = utils.scoreToSprites(level.bestScore, utils.scoreSize.SMALL);\r\n        this.bestScoreSprite.x = this.gameOverScreen.width / 2 - this.bestScoreSprite.width / 2 + 2;\r\n        this.bestScoreSprite.y = 135;\r\n\r\n        this.gameOverContainer.addChild(this.scoreSprite);\r\n        this.gameOverContainer.addChild(this.bestScoreSprite);\r\n\r\n        this.gameOverContainer.visible = true;\r\n    },\r\n\r\n    _createGameOverScreen() {\r\n        this.gameOverContainer = new PIXI.Container();\r\n        this.gameOverContainer.y = (level.ceilingSprite.height + settings.playableAreaAboveWater + settings.playableAreaBelowWater) / 2 - utils.getTexture(settings.textures.GAME_OVER).height / 2;\r\n        this.gameOverContainer.x = 150;\r\n\r\n        this.gameOverScreen = new PIXI.Sprite(utils.getTexture(settings.textures.GAME_OVER));\r\n\r\n        this.gameOverContainer.addChild(this.gameOverScreen);\r\n\r\n        this.scoreSprite = utils.scoreToSprites(level.score, utils.scoreSize.SMALL);\r\n        this.scoreSprite.x = this.gameOverScreen.width / 2 - this.scoreSprite.width / 2 + 2;\r\n        this.scoreSprite.y = 93;\r\n\r\n        this.bestScoreSprite = utils.scoreToSprites(level.bestScore, utils.scoreSize.SMALL);\r\n        this.bestScoreSprite.x = this.gameOverScreen.width / 2 - this.bestScoreSprite.width / 2 + 2;\r\n        this.bestScoreSprite.y = 135;\r\n\r\n        this.gameOverContainer.addChild(this.scoreSprite);\r\n        this.gameOverContainer.addChild(this.bestScoreSprite);\r\n\r\n        let restartButton = new PIXI.Sprite(utils.getTexture(settings.textures.RESTART));\r\n        restartButton.x = this.gameOverScreen.width / 2 - restartButton.width / 2 + 2;\r\n        restartButton.y = 190;\r\n        restartButton.interactive = true;\r\n        restartButton.buttonMode = true;\r\n        restartButton.defaultCursor = 'pointer';\r\n\r\n        restartButton.addListener(\"click\", this._clickRestart.bind(this));\r\n\r\n        if (\"ontouchstart\" in window) {\r\n            restartButton.addListener(\"touchstart\", this._clickRestart.bind(this));\r\n        }\r\n\r\n\r\n\r\n        this.gameOverContainer.addChild(restartButton);\r\n\r\n        this.gameOverContainer.visible = false;\r\n\r\n        return this.gameOverContainer;\r\n    },\r\n\r\n    _clickRestart() {\r\n        this.restart();\r\n        this.gameOverContainer.visible = false;\r\n    },\r\n\r\n    /**\r\n     * Stop the game\r\n     */\r\n    stop() {\r\n        this.hasStopped = true;\r\n    },\r\n\r\n    /**\r\n     * Continue the game after stopping\r\n     * Make sure bird is no longer colliding or it'll stop again instantly\r\n     */\r\n    restart() {\r\n        level.reset();\r\n        bird.reset();\r\n\r\n        this.hasStopped = false;\r\n    },\r\n\r\n    _playDieAudio() {\r\n        audioPlayer.play(audioPlayer.audioFragments.HIT,\r\n            audioPlayer.play.bind(audioPlayer, audioPlayer.audioFragments.DIE)\r\n        );\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = game;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils.js');\r\n\r\nlet audioPlayer = require('./audioPlayer');\r\n\r\nconst pipeFacing = {\r\n    'UP': 1,\r\n    'DOWN': -1,\r\n};\r\n\r\nlet level = {\r\n    /**\r\n     * The container that will contain everything that needs to be moved towards the player\r\n     */\r\n    container: undefined,\r\n    /**\r\n     * The container that will contain all floor tiles\r\n     */\r\n    floorSprite: undefined,\r\n\r\n    ceilingSprite: undefined,\r\n\r\n    pipesContainer: undefined,\r\n    pipes: [],\r\n\r\n    pipeTexture: undefined,\r\n    pipeTopTexture: undefined,\r\n    pipeBottomTexture: undefined,\r\n\r\n    firstPipeFacing: pipeFacing.UP,\r\n\r\n    nextPipeFacing: 0,\r\n    placedPipesCount: 0,\r\n\r\n    playerInsidePipe: false,\r\n\r\n    pipeGapSize: 100,\r\n\r\n    pipeDistance: 400,\r\n    firstPipeDistance: 800,\r\n\r\n    score: 0,\r\n    bestScore: 0,\r\n    scoreContainer: undefined,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n\r\n        this.container.addChild(this._createCeiling());\r\n        this.container.addChild(this._createFloor());\r\n\r\n        // Pipes stuff\r\n        this.nextPipeFacing = this.firstPipeFacing;\r\n        this.pipeTexture = utils.getTexture(settings.textures.pipe);\r\n        this.pipeTopTexture = utils.getTexture(settings.textures.pipeUp);\r\n        this.pipeBottomTexture = utils.getTexture(settings.textures.pipeDown);\r\n\r\n        this.pipesContainer = new PIXI.Container();\r\n\r\n        this._initialPipes();\r\n\r\n        this.container.addChild(this.pipesContainer);\r\n\r\n        // Score\r\n        this.scoreContainer = new PIXI.Container();\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n\r\n        // Todo: Make vars\r\n        this.scoreContainer.x = 10;\r\n        this.scoreContainer.y = utils.getTexture(settings.textures.ceiling).height + 10;\r\n\r\n        this.container.addChild(this.scoreContainer);\r\n\r\n        return this;\r\n    },\r\n\r\n    reset() {\r\n        this.score = 0;\r\n        this.scoreContainer.removeChild(this.scoreContainer.children[0]);\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n\r\n        this.pipesContainer.x = 0;\r\n        this.pipesContainer.children.splice(0);\r\n        this.pipes = [];\r\n        this.playerInsidePipe = false;\r\n        this.nextPipeFacing = this.firstPipeFacing;\r\n        this.placedPipesCount = 0;\r\n        this._initialPipes();\r\n    },\r\n\r\n    loop() {\r\n        this.ceilingSprite.tilePosition.x += -settings.forwardSpeed;\r\n        this.floorSprite.tilePosition.x += -settings.forwardSpeed;\r\n\r\n        // Pipes stuff\r\n        this.pipesContainer.x += -settings.forwardSpeed;\r\n\r\n        // Remove pipes when they're off screen\r\n        if (this.pipes.length > 0) {\r\n\r\n            if (this.pipesContainer.x < -this.pipes[0].x - this.pipeTexture.width) {\r\n                this.pipesContainer.removeChild(this.pipes[0]);\r\n                this.pipes.shift();\r\n\r\n                this._placeNewPipe();\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get the y position of the water\r\n     */\r\n    getWaterLevel() {\r\n        return settings.playableAreaAboveWater;\r\n    },\r\n\r\n    /**\r\n     * Get the element to render\r\n     * @returns {undefined|*}\r\n     */\r\n    getElement() {\r\n        return this.container;\r\n    },\r\n\r\n    pipeCollision(bird) {\r\n\r\n        // We will check if the bird is colliding with the first pipe\r\n        // The bird can't possibly hit any other pipes\r\n\r\n        // We only need to collide with the left side of the pipes and the top/bottom pieces\r\n        // We know how far the pipe container has moved to the right, we can use this to get the left side\r\n\r\n        // Because of square collision it can feel unfair when hitting the sides of the pipes while at an angle\r\n        // Which often happens when diving through the gap. To make things a bit fairer, added a small margin;\r\n        let collisionMargin = 2;\r\n\r\n        let left = this.pipesContainer.x + this.pipes[0].x + collisionMargin;\r\n        let right = left + utils.getTexture(settings.textures.pipe).width - collisionMargin;\r\n        \r\n        // The bird is in the left/right boundaries of the first pipe\r\n        if (bird.getRight() > left && bird.getLeft() < right) {\r\n\r\n            this.playerInsidePipe = true;\r\n\r\n            // The bird is above the gap!\r\n            if (bird.getTop() < this.pipes[0].gap.top || bird.getBottom() > this.pipes[0].gap.bottom) {\r\n                return true;\r\n            }\r\n        } else if (this.playerInsidePipe) {\r\n            // Player has passed the pipe\r\n            this._increaseScore();\r\n            this.playerInsidePipe = false;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    _createCeiling() {\r\n        let ceilingTexture = utils.getTexture(settings.textures.ceiling);\r\n\r\n        this.ceilingSprite = new PIXI.extras.TilingSprite(ceilingTexture, window.innerWidth, ceilingTexture.height);\r\n\r\n        return this.ceilingSprite;\r\n    },\r\n\r\n    _createFloor() {\r\n        let floorTexture = utils.getTexture(settings.textures.floor);\r\n\r\n        this.floorSprite = new PIXI.extras.TilingSprite(floorTexture, window.innerWidth, floorTexture.height);\r\n        this.floorSprite.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return this.floorSprite;\r\n    },\r\n\r\n    _initialPipes() {\r\n        let startingPipesCount = Math.ceil(window.innerWidth / this.pipeDistance);\r\n\r\n        for (let i = 0; i < startingPipesCount; i++) {\r\n            let pipe = this._createPipe(this._getRandomPipeHeight(), this.nextPipeFacing);\r\n            pipe.x = this.firstPipeDistance + this.pipeDistance * i;\r\n            this.pipesContainer.addChild(pipe);\r\n            this.pipes.push(pipe);\r\n\r\n            this.nextPipeFacing *= -1;\r\n            this.placedPipesCount++;\r\n        }\r\n    },\r\n\r\n    _placeNewPipe() {\r\n        // We need total pipe amount, to calculate position of new one\r\n        let pipe = this._createPipe(this._getRandomPipeHeight(), this.nextPipeFacing);\r\n        pipe.x = this.placedPipesCount * this.pipeDistance + this.firstPipeDistance;\r\n        this.pipesContainer.addChild(pipe);\r\n        this.pipes.push(pipe);\r\n\r\n        this.nextPipeFacing *= -1;\r\n        this.placedPipesCount++;\r\n    },\r\n\r\n    _createPipe(height, direction) {\r\n        let container = new PIXI.Container();\r\n\r\n        let totalPlayHeight = settings.playableAreaAboveWater + settings.playableAreaBelowWater;\r\n\r\n        if (direction === pipeFacing.UP) {\r\n            container.addChild(this._createUpFacingPipe(height));\r\n        } else if (direction === pipeFacing.DOWN) {\r\n            container.addChild(this._createDownFacingPipe(height));\r\n        }\r\n\r\n        // Check if we have space for pipe in opposite direction to complete the gap\r\n        if (height + this.pipeGapSize < totalPlayHeight) {\r\n            // We can fit another pipe opposite to it\r\n            let oppositePipeHeight = totalPlayHeight - height - this.pipeGapSize;\r\n            if (direction === pipeFacing.UP)\r\n                container.addChild(this._createDownFacingPipe(oppositePipeHeight));\r\n\r\n            if (direction === pipeFacing.DOWN)\r\n                container.addChild(this._createUpFacingPipe(oppositePipeHeight));\r\n        }\r\n\r\n        // Store the information of the gap position in the container object for easier collision checks\r\n        let top = (direction === pipeFacing.UP ? totalPlayHeight - height - this.pipeGapSize : height) + this.ceilingSprite.height;\r\n        let bottom = (direction === pipeFacing.UP ? totalPlayHeight - height : height + this.pipeGapSize) + this.ceilingSprite.height;\r\n        container.gap = { top, bottom }\r\n\r\n        return container;\r\n    },\r\n\r\n    _createUpFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipeTop = new PIXI.Sprite(this.pipeTopTexture);\r\n        container.addChild(pipeTop);\r\n\r\n        let pipePartHeight = height - this.pipeTopTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        pipe.y = this.pipeTopTexture.height;\r\n        container.addChild(pipe);\r\n\r\n        // Place pipe on the bottom\r\n        container.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater - height + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return container;\r\n    },\r\n\r\n    _createDownFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipePartHeight = height - this.pipeBottomTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        container.addChild(pipe);\r\n\r\n        let pipeBottom = new PIXI.Sprite(this.pipeBottomTexture);\r\n        pipeBottom.y = pipePartHeight;\r\n        container.addChild(pipeBottom);\r\n\r\n        // We can place it against the ceiling\r\n        container.y = utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return container;\r\n    },\r\n\r\n    _increaseScore() {\r\n        audioPlayer.play(audioPlayer.audioFragments.POINT);\r\n        this.score++;\r\n\r\n        if (this.score > this.bestScore) this.bestScore = this.score;\r\n\r\n        // Because we put all digits inside one container, we only have to remove on child\r\n        this.scoreContainer.removeChild(this.scoreContainer.children[0]);\r\n\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n   },\r\n\r\n    _getRandomPipeHeight() {\r\n        // Todo: Grab from settings somewhere\r\n        let minHeight = 280;\r\n        let maxHeight = 390;\r\n\r\n        return Math.random() * (maxHeight - minHeight) + minHeight;\r\n    },\r\n};\r\n\r\nmodule.exports = level;\r\n","const settings = {\r\n    /**\r\n     * The location of the assets json\r\n     */\r\n    assetFile: \"assets/assets.json\",\r\n\r\n    soundsPath: \"assets/sounds/\",\r\n\r\n    /**\r\n     * The area that is available above the water\r\n     */\r\n    playableAreaAboveWater: 260,\r\n\r\n    playableAreaBelowWater: 260,\r\n\r\n    /**\r\n     * The speed at which objects move towards the player\r\n     */\r\n    forwardSpeed: 5,\r\n\r\n    /**\r\n     * The speed at which the background moves\r\n     */\r\n    backgroundSpeed: 2,\r\n\r\n    /**\r\n     * The amount of gravity added to the velocity of the player while above the water\r\n     */\r\n    gravity: 0.3,\r\n\r\n    /**\r\n     * The amount of upward force added to the velocity of the player while below the water\r\n     */\r\n    waterPushForce: 0.3,\r\n\r\n    /**\r\n     * The amount of upward velocity is added to the player on 'flapping'.\r\n     */\r\n    birdFlapVelocity: 4.5,\r\n\r\n    /**\r\n     * If vertical velocity of the player should be reset before applying the flap velocity\r\n     */\r\n    shouldBirdFlapResetVelocity: true,\r\n\r\n    textures: {\r\n        'background': 'sky.png',\r\n        'floor': 'land.png',\r\n        'ceiling': 'ceiling.png',\r\n        'pipe': 'pipe.png',\r\n        'pipeUp': 'pipe-up.png',\r\n        'pipeDown': 'pipe-down.png',\r\n        'WATER': 'water.png',\r\n        'GAME_OVER': 'scoreboard.png',\r\n        'RESTART': 'replay.png',\r\n        'BIG_0': 'font_big_0.png',\r\n        'BIG_1': 'font_big_1.png',\r\n        'BIG_2': 'font_big_2.png',\r\n        'BIG_3': 'font_big_3.png',\r\n        'BIG_4': 'font_big_4.png',\r\n        'BIG_5': 'font_big_5.png',\r\n        'BIG_6': 'font_big_6.png',\r\n        'BIG_7': 'font_big_7.png',\r\n        'BIG_8': 'font_big_8.png',\r\n        'BIG_9': 'font_big_9.png',\r\n        'SMALL_0': 'font_small_0.png',\r\n        'SMALL_1': 'font_small_1.png',\r\n        'SMALL_2': 'font_small_2.png',\r\n        'SMALL_3': 'font_small_3.png',\r\n        'SMALL_4': 'font_small_4.png',\r\n        'SMALL_5': 'font_small_5.png',\r\n        'SMALL_6': 'font_small_6.png',\r\n        'SMALL_7': 'font_small_7.png',\r\n        'SMALL_8': 'font_small_8.png',\r\n        'SMALL_9': 'font_small_9.png',\r\n    }\r\n};\r\n\r\nmodule.exports = settings;\r\n","let setup = {\r\n    renderer() {\r\n        let renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight);\r\n        renderer.view.style.position = \"absolute\";\r\n        renderer.view.style.display = \"block\";\r\n        renderer.backgroundColor = 0x4ec0ca;\r\n        renderer.autoResize = true;\r\n\r\n        document.body.appendChild(renderer.view);\r\n\r\n        return renderer;\r\n    },\r\n\r\n    loadAssets(callback) {\r\n        PIXI.loader.add(\"assets/assets.json\").load(callback);\r\n    }\r\n};\r\n\r\nmodule.exports = setup;\r\n","let settings = require('./settings');\r\n\r\nlet utils = {\r\n\r\n    scoreSize: {\r\n        'SMALL': 0,\r\n        'BIG': 1\r\n    },\r\n\r\n    /**\r\n     * Get a texture from the pixi loader by name\r\n     * @param name texture name, with extension\r\n     * @returns {*|PIXI.Texture|FrameObject}\r\n     */\r\n    getTexture(name) {\r\n        return PIXI.loader.resources[settings.assetFile].textures[name]\r\n    },\r\n\r\n    /**\r\n     * Fill a given pixi container and fill it with vertically aligned tiles fitting whole window width\r\n     * @param container\r\n     * @param texture\r\n     */\r\n    fillContainerWithWindowWidthTiles(container, texture) {\r\n        let requiredTiles = this._getRequiredWidthTiles(texture.width);\r\n\r\n        for (let i = 0; i < requiredTiles; i++) {\r\n            let tile = new PIXI.Sprite(texture);\r\n            tile.x = tile.width * i;\r\n            container.addChild(tile);\r\n        }\r\n    },\r\n\r\n    scoreToSprites(score, size) {\r\n        let stringScore = score.toString();\r\n\r\n        let texturePrefix = size === this.scoreSize.BIG ? 'BIG_' : 'SMALL_';\r\n        let letterSpacing = size === this.scoreSize.BIG ? 25 : 10;\r\n\r\n\r\n        let digitsContainer = new PIXI.Container();\r\n\r\n        for (let i = 0, len = stringScore.length; i < len; i++) {\r\n            let digit = new PIXI.Sprite(this.getTexture(settings.textures[texturePrefix + stringScore.charAt(i)]));\r\n            digit.x = i * letterSpacing;\r\n            digitsContainer.addChild(digit)\r\n        }\r\n\r\n        return digitsContainer;\r\n    },\r\n\r\n    _getRequiredWidthTiles(tileWidth) {\r\n        return Math.ceil(window.innerWidth / tileWidth) + 1;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = utils;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}