{"version":3,"sources":["e:/Code/pixi/node_modules/browser-pack/_prelude.js","js/main.js","e:/Code/pixi/js/background.js","e:/Code/pixi/js/bird.js","e:/Code/pixi/js/game.js","e:/Code/pixi/js/level.js","e:/Code/pixi/js/settings.js","e:/Code/pixi/js/setup.js","e:/Code/pixi/js/utils.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\r\n    let game = require('./game');\r\n    game.start();\r\n})();\r\n\r\n","let settings = require('./settings.js');\r\nlet utils = require('./utils.js');\r\n\r\nvar background = {\r\n    /**\r\n     * The container that will contain all background tiles lined up\r\n     */\r\n    container: undefined,\r\n\r\n    /**\r\n     * The width of one background tile, is needed in some calculations/checks\r\n     */\r\n    skyTileWidth: 0,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n        let skyTileTexture = utils.getTexture(settings.textures.background)\r\n        this.skyTileWidth = skyTileTexture.width;\r\n\r\n        this.container.y = settings.playableAreaAboveWater - skyTileTexture.height + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        utils.fillContainerWithWindowWidthTiles(this.container, skyTileTexture);\r\n\r\n        return this;\r\n    },\r\n\r\n    loop() {\r\n        this.container.x += -settings.backgroundSpeed;\r\n\r\n        // By moving the whole background back at the right moment we don't have to worry about tracking individual tiles\r\n        if (this.container.x <= -this.skyTileWidth) {\r\n            this.container.x = 0;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get the element that needs to be rendered\r\n     * @returns {Container}\r\n     */\r\n    getElement() {\r\n        return this.container;\r\n    }\r\n};\r\n\r\nmodule.exports = background;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nlet bird = {\r\n    container: undefined,\r\n    bird: undefined,\r\n    boundingBox: undefined,\r\n    velocity: {x: 0, y: 0},\r\n    isBelowWater: true,\r\n\r\n    animationFrames: 4,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n\r\n        let spriteFrames = [];\r\n        for (let i = 0; i < this.animationFrames; i++) {\r\n            spriteFrames.push(utils.getTexture('bird_' + i +  '.png'));\r\n        }\r\n        this.bird = new PIXI.extras.AnimatedSprite(spriteFrames);\r\n\r\n        this.bird.animationSpeed = 0.2;\r\n        this.bird.play();\r\n\r\n        this.bird.anchor.x = 0.5;\r\n        this.bird.anchor.y = 0.5;\r\n\r\n        this.bird.y = 150;\r\n        this.bird.x = 100;\r\n\r\n        this.container.addChild(this.bird);\r\n\r\n        this.boundingBox = {x: 0, y: 0, width: 0, height: 0};\r\n\r\n        return this;\r\n    },\r\n\r\n    loop() {\r\n        if (this.isBelowWater) {\r\n            this.belowWater();\r\n        } else {\r\n            this.aboveWater();\r\n        }\r\n\r\n        this.bird.y += this.velocity.y;\r\n        this.bird.rotation = Math.atan2(this.velocity.y, settings.forwardSpeed);\r\n    },\r\n\r\n    aboveWater() {\r\n        this.velocity.y += settings.gravity;\r\n    },\r\n\r\n    belowWater() {\r\n        this.velocity.y -= settings.waterPushForce;\r\n    },\r\n\r\n    flap() {\r\n        if (settings.shouldBirdFlapResetVelocity ) {\r\n            this.velocity.y = 0;\r\n        }\r\n\r\n        this.velocity.y -= settings.birdFlapVelocity;\r\n    },\r\n\r\n    getElement() {\r\n        return this.bird;\r\n    },\r\n\r\n    getTop() {\r\n        return this.bird.y - this.bird.height / 2;\r\n    },\r\n\r\n    getBottom() {\r\n        return this.bird.y + this.bird.height / 2;\r\n    },\r\n\r\n    getRight() {\r\n        return this.bird.x + this.bird.width / 2;\r\n    },\r\n\r\n    getLeft() {\r\n        return this.bird.x - this.bird.width / 2;\r\n    }\r\n};\r\n\r\nmodule.exports = bird;\r\n","let setup = require('./setup');\r\nlet background = require('./background');\r\nlet level = require('./level');\r\nlet bird = require('./bird');\r\n\r\nlet game = {\r\n\r\n    renderer: undefined,\r\n    stage: undefined,\r\n\r\n    hasStopped: false,\r\n\r\n    /**\r\n     * Start the game\r\n     */\r\n    start() {\r\n        this.renderer  = setup.renderer();\r\n        setup.loadAssets(this.initialize.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Initialize all required parts of the game\r\n     */\r\n    initialize() {\r\n        this.stage = new PIXI.Container();\r\n\r\n        background.initialize();\r\n        this.stage.addChild(background.getElement());\r\n\r\n        level.initialize();\r\n        this.stage.addChild(level.getElement());\r\n\r\n        // Spawn the pipes\r\n\r\n        bird.initialize();\r\n        this.stage.addChild(bird.getElement());\r\n\r\n        this.renderer.render(this.stage);\r\n\r\n        // Todo: Add proper input handling\r\n        window.addEventListener(\"keyup\", bird.flap.bind(bird), false);\r\n\r\n        this.loop();\r\n    },\r\n\r\n    /**\r\n     * The game loop\r\n     */\r\n    loop() {\r\n        requestAnimationFrame(this.loop.bind(this));\r\n\r\n        // This basically causes the game to 'freeze'. This should change the updating to menu and such\r\n        if (this.hasStopped) return;\r\n\r\n        background.loop();\r\n        level.loop();\r\n        bird.loop();\r\n\r\n        // Check if the bird is below or underneath the water\r\n        if (bird.getTop() < level.getWaterLevel() && bird.isBelowWater) {\r\n            bird.isBelowWater = false;\r\n        } else if (bird.getTop() >= level.getWaterLevel() && !bird.isBelowWater) {\r\n            bird.isBelowWater = true;\r\n        }\r\n\r\n        // Ceiling collision\r\n        if (bird.getTop() <= level.ceilingSprite.y + level.ceilingSprite.height) {\r\n            this.stop();\r\n        }\r\n\r\n        if (level.pipeCollision(bird)) {\r\n            this.stop();\r\n        }\r\n\r\n        this.renderer.render(this.stage);\r\n    },\r\n\r\n    /**\r\n     * Stop the game\r\n     */\r\n    stop() {\r\n        this.hasStopped = true;\r\n    },\r\n\r\n    /**\r\n     * Continue the game after stopping\r\n     * Make sure bird is no longer colliding or it'll stop again instantly\r\n     */\r\n    play() {\r\n        this.hasStopped = false;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = game;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils.js');\r\n\r\nconst pipeFacing = {\r\n    'UP': 1,\r\n    'DOWN': -1,\r\n};\r\n\r\nlet level = {\r\n    /**\r\n     * The container that will contain everything that needs to be moved towards the player\r\n     */\r\n    container: undefined,\r\n    /**\r\n     * The container that will contain all floor tiles\r\n     */\r\n    floorSprite: undefined,\r\n\r\n    ceilingSprite: undefined,\r\n\r\n    pipesContainer: undefined,\r\n    pipes: [],\r\n\r\n    pipeTexture: undefined,\r\n    pipeTopTexture: undefined,\r\n    pipeBottomTexture: undefined,\r\n\r\n    firstPipeFacing: pipeFacing.UP,\r\n\r\n    nextPipeFacing: 0,\r\n    placedPipesCount: 0,\r\n\r\n    pipeGapSize: 100,\r\n\r\n    pipeDistance: 300,\r\n    firstPipeDistance: 800,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n\r\n        this.container.addChild(this._createCeiling());\r\n        this.container.addChild(this._createFloor());\r\n\r\n        // Pipes stuff\r\n        this.nextPipeFacing = this.firstPipeFacing;\r\n        this.pipeTexture = utils.getTexture(settings.textures.pipe);\r\n        this.pipeTopTexture = utils.getTexture(settings.textures.pipeUp);\r\n        this.pipeBottomTexture = utils.getTexture(settings.textures.pipeDown);\r\n\r\n        this.pipesContainer = new PIXI.Container();\r\n\r\n        this._initialPipes();\r\n\r\n        this.container.addChild(this.pipesContainer);\r\n\r\n        return this;\r\n    },\r\n\r\n    loop() {\r\n        this.ceilingSprite.tilePosition.x += -settings.forwardSpeed;\r\n        this.floorSprite.tilePosition.x += -settings.forwardSpeed;\r\n\r\n        // Pipes stuff\r\n        this.pipesContainer.x += -settings.forwardSpeed;\r\n\r\n        // Remove pipes when they're off screen\r\n        if (this.pipes.length > 0) {\r\n\r\n            if (this.pipesContainer.x < -this.pipes[0].x - this.pipeTexture.width) {\r\n                this.pipesContainer.removeChild(this.pipes[0]);\r\n                this.pipes.shift();\r\n\r\n                this._placeNewPipe();\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Get the y position of the water\r\n     */\r\n    getWaterLevel() {\r\n        return settings.playableAreaAboveWater;\r\n    },\r\n\r\n    /**\r\n     * Get the element to render\r\n     * @returns {undefined|*}\r\n     */\r\n    getElement() {\r\n        return this.container;\r\n    },\r\n\r\n    pipeCollision(bird) {\r\n\r\n        // We will check if the bird is colliding with the first pipe\r\n        // The bird can't possibly hit any other pipes\r\n\r\n        // We only need to collide with the left side of the pipes and the top/bottom pieces\r\n        // We know how far the pipe container has moved to the right, we can use this to get the left side\r\n\r\n        let left = this.pipesContainer.x + this.pipes[0].x;\r\n        let right = left + utils.getTexture(settings.textures.pipe).width;\r\n        \r\n        // The bird is in the left/right boundaries of the first pipe\r\n        if (bird.getRight() > left && bird.getLeft() < right) {\r\n\r\n            // The bird is above the gap!\r\n            if (bird.getTop() < this.pipes[0].gap.top || bird.getBottom() > this.pipes[0].gap.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    _createCeiling() {\r\n        let ceilingTexture = utils.getTexture(settings.textures.ceiling);\r\n\r\n        this.ceilingSprite = new PIXI.extras.TilingSprite(ceilingTexture, window.innerWidth, ceilingTexture.height);\r\n\r\n        return this.ceilingSprite;\r\n    },\r\n\r\n    _createFloor() {\r\n        let floorTexture = utils.getTexture(settings.textures.floor);\r\n\r\n        this.floorSprite = new PIXI.extras.TilingSprite(floorTexture, window.innerWidth, floorTexture.height);\r\n        this.floorSprite.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return this.floorSprite;\r\n    },\r\n\r\n    _initialPipes() {\r\n        let startingPipesCount = Math.ceil(window.innerWidth / this.pipeDistance);\r\n\r\n        for (let i = 0; i < startingPipesCount; i++) {\r\n            let pipe = this._createPipe(this._getRandomPipeHeight(), this.nextPipeFacing);\r\n            pipe.x = this.firstPipeDistance + this.pipeDistance * i;\r\n            this.pipesContainer.addChild(pipe);\r\n            this.pipes.push(pipe);\r\n\r\n            this.nextPipeFacing *= -1;\r\n            this.placedPipesCount++;\r\n        }\r\n    },\r\n\r\n    _placeNewPipe() {\r\n        // We need total pipe amount, to calculate position of new one\r\n        let pipe = this._createPipe(this._getRandomPipeHeight(), this.nextPipeFacing);\r\n        pipe.x = this.placedPipesCount * this.pipeDistance + this.firstPipeDistance;\r\n        this.pipesContainer.addChild(pipe);\r\n        this.pipes.push(pipe);\r\n\r\n        this.nextPipeFacing *= -1;\r\n        this.placedPipesCount++;\r\n    },\r\n\r\n    _createPipe(height, direction) {\r\n        let container = new PIXI.Container();\r\n\r\n        let totalPlayHeight = settings.playableAreaAboveWater + settings.playableAreaBelowWater;\r\n\r\n        if (direction === pipeFacing.UP) {\r\n            container.addChild(this._createUpFacingPipe(height));\r\n        } else if (direction === pipeFacing.DOWN) {\r\n            container.addChild(this._createDownFacingPipe(height));\r\n        }\r\n\r\n        // Check if we have space for pipe in opposite direction to complete the gap\r\n        if (height + this.pipeGapSize < totalPlayHeight) {\r\n            // We can fit another pipe opposite to it\r\n            let oppositePipeHeight = totalPlayHeight - height - this.pipeGapSize;\r\n            if (direction === pipeFacing.UP)\r\n                container.addChild(this._createDownFacingPipe(oppositePipeHeight));\r\n\r\n            if (direction === pipeFacing.DOWN)\r\n                container.addChild(this._createUpFacingPipe(oppositePipeHeight));\r\n        }\r\n\r\n        // Store the information of the gap position in the container object for easier collision checks\r\n        let top = (direction === pipeFacing.UP ? height - this.pipeGapSize : height) + this.ceilingSprite.height;\r\n        let bottom = (direction === pipeFacing.UP ? height : height + this.pipeGapSize) + this.ceilingSprite.height;\r\n        container.gap = { top, bottom }\r\n\r\n        return container;\r\n    },\r\n\r\n    _createUpFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipeTop = new PIXI.Sprite(this.pipeTopTexture);\r\n        container.addChild(pipeTop);\r\n\r\n        let pipePartHeight = height - this.pipeTopTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        pipe.y = this.pipeTopTexture.height;\r\n        container.addChild(pipe);\r\n\r\n        // Place pipe on the bottom\r\n        container.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater - height + utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return container;\r\n    },\r\n\r\n    _createDownFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipePartHeight = height - this.pipeBottomTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        container.addChild(pipe);\r\n\r\n        let pipeBottom = new PIXI.Sprite(this.pipeBottomTexture);\r\n        pipeBottom.y = pipePartHeight;\r\n        container.addChild(pipeBottom);\r\n\r\n        // We can place it against the ceiling\r\n        container.y = utils.getTexture(settings.textures.ceiling).height;\r\n\r\n        return container;\r\n    },\r\n\r\n    _getRandomPipeHeight() {\r\n        return 280;\r\n    },\r\n};\r\n\r\nmodule.exports = level;\r\n","const settings = {\r\n    /**\r\n     * The location of the assets json\r\n     */\r\n    assetFile: \"assets/assets.json\",\r\n\r\n    /**\r\n     * The area that is available above the water\r\n     */\r\n    playableAreaAboveWater: 280,\r\n\r\n    playableAreaBelowWater: 280,\r\n\r\n    /**\r\n     * The speed at which objects move towards the player\r\n     */\r\n    forwardSpeed: 5,\r\n\r\n    /**\r\n     * The speed at which the background moves\r\n     */\r\n    backgroundSpeed: 1,\r\n\r\n    /**\r\n     * The amount of gravity added to the velocity of the player while above the water\r\n     */\r\n    gravity: 0.3,\r\n\r\n    /**\r\n     * The amount of upward force added to the velocity of the player while below the water\r\n     */\r\n    waterPushForce: 0.3,\r\n\r\n    /**\r\n     * The amount of upward velocity is added to the player on 'flapping'.\r\n     */\r\n    birdFlapVelocity: 4,\r\n\r\n    /**\r\n     * If vertical velocity of the player should be reset before applying the flap velocity\r\n     */\r\n    shouldBirdFlapResetVelocity: false,\r\n\r\n    textures: {\r\n        'background': 'sky.png',\r\n        'floor': 'land.png',\r\n        'ceiling': 'ceiling.png',\r\n        'pipe': 'pipe.png',\r\n        'pipeUp': 'pipe-up.png',\r\n        'pipeDown': 'pipe-down.png',\r\n    }\r\n};\r\n\r\nmodule.exports = settings;\r\n","let setup = {\r\n    renderer() {\r\n        let renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight);\r\n        renderer.view.style.position = \"absolute\";\r\n        renderer.view.style.display = \"block\";\r\n        renderer.backgroundColor = 0x4ec0ca;\r\n        renderer.autoResize = true;\r\n\r\n        document.body.appendChild(renderer.view);\r\n\r\n        return renderer;\r\n    },\r\n\r\n    loadAssets(callback) {\r\n        PIXI.loader.add(\"assets/assets.json\").load(callback);\r\n    }\r\n};\r\n\r\nmodule.exports = setup;\r\n","let settings = require('./settings');\r\n\r\nlet utils = {\r\n\r\n    /**\r\n     * Get a texture from the pixi loader by name\r\n     * @param name texture name, with extension\r\n     * @returns {*|PIXI.Texture|FrameObject}\r\n     */\r\n    getTexture(name) {\r\n        return PIXI.loader.resources[settings.assetFile].textures[name]\r\n    },\r\n\r\n    /**\r\n     * Fill a given pixi container and fill it with vertically aligned tiles fitting whole window width\r\n     * @param container\r\n     * @param texture\r\n     */\r\n    fillContainerWithWindowWidthTiles(container, texture) {\r\n        let requiredTiles = this._getRequiredWidthTiles(texture.width);\r\n\r\n        for (let i = 0; i < requiredTiles; i++) {\r\n            let tile = new PIXI.Sprite(texture);\r\n            tile.x = tile.width * i;\r\n            container.addChild(tile);\r\n        }\r\n    },\r\n\r\n    _getRequiredWidthTiles(tileWidth) {\r\n        return Math.ceil(window.innerWidth / tileWidth) + 1;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = utils;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}