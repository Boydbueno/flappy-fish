{"version":3,"sources":["e:/Code/flappy-fish/node_modules/browser-pack/_prelude.js","js/main.js","e:/Code/flappy-fish/js/Pipe.js","e:/Code/flappy-fish/js/audioPlayer.js","e:/Code/flappy-fish/js/background.js","e:/Code/flappy-fish/js/bird.js","e:/Code/flappy-fish/js/game.js","e:/Code/flappy-fish/js/gameOverScreen.js","e:/Code/flappy-fish/js/level.js","e:/Code/flappy-fish/js/settings.js","e:/Code/flappy-fish/js/setup.js","e:/Code/flappy-fish/js/utils.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","let game = require('./game');\r\n\r\n(function() {\r\n    game.start();\r\n})();\r\n\r\n","let settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nclass Pipe {\r\n    constructor(height, facing) {\r\n        this.height = height;\r\n        this.facing = facing;\r\n\r\n        this.pipeTexture = utils.getTexture(settings.textures.PIPE);\r\n        this.pipeTopTexture = utils.getTexture(settings.textures.PIPE_UP);\r\n        this.pipeBottomTexture = utils.getTexture(settings.textures.PIPE_DOWN);\r\n\r\n        this._container = new PIXI.Container();\r\n\r\n        let totalPlayHeight = settings.playableAreaAboveWater + settings.playableAreaBelowWater;\r\n\r\n        if (facing === Pipe.UP) {\r\n            this._container.addChild(this._createUpFacingPipe(height));\r\n        } else if (facing === Pipe.DOWN) {\r\n            this._container.addChild(this._createDownFacingPipe(height));\r\n        }\r\n\r\n        // Check if we have space for pipe in opposite direction to complete the gap\r\n        if (height + settings.pipeGapSize < totalPlayHeight) {\r\n            // We can fit another pipe opposite to it\r\n            let oppositePipeHeight = totalPlayHeight - height - settings.pipeGapSize;\r\n            if (facing === Pipe.UP)\r\n                this._container.addChild(this._createDownFacingPipe(oppositePipeHeight));\r\n\r\n            if (facing === Pipe.DOWN)\r\n                this._container.addChild(this._createUpFacingPipe(oppositePipeHeight));\r\n        }\r\n\r\n        let ceilingSpriteHeight = utils.getTexture(settings.textures.CEILING).height;\r\n\r\n        // Store the information of the gap position in the container object for easier collision checks\r\n        let top = (facing === Pipe.UP ? totalPlayHeight - height - settings.pipeGapSize : height) + ceilingSpriteHeight;\r\n        let bottom = (facing === Pipe.UP ? totalPlayHeight - height : height + settings.pipeGapSize) + ceilingSpriteHeight;\r\n        this.container.gap = { top, bottom }\r\n    }\r\n\r\n    _createUpFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipeTop = new PIXI.Sprite(this.pipeTopTexture);\r\n        container.addChild(pipeTop);\r\n\r\n        let pipePartHeight = height - this.pipeTopTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        pipe.y = this.pipeTopTexture.height;\r\n        container.addChild(pipe);\r\n\r\n        // Place pipe on the bottom\r\n        container.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater - height + utils.getTexture(settings.textures.CEILING).height;\r\n\r\n        return container;\r\n    }\r\n\r\n    _createDownFacingPipe(height) {\r\n        let container = new PIXI.Container();\r\n\r\n        let pipePartHeight = height - this.pipeBottomTexture.height;\r\n\r\n        let pipe = new PIXI.extras.TilingSprite(this.pipeTexture, this.pipeTexture.width, pipePartHeight);\r\n        container.addChild(pipe);\r\n\r\n        let pipeBottom = new PIXI.Sprite(this.pipeBottomTexture);\r\n        pipeBottom.y = pipePartHeight;\r\n        container.addChild(pipeBottom);\r\n\r\n        // We can place it against the ceiling\r\n        container.y = utils.getTexture(settings.textures.CEILING).height;\r\n\r\n        return container;\r\n    }\r\n\r\n    get container() {\r\n        return this._container;\r\n    }\r\n\r\n    set container(container) {\r\n        this._container = container;\r\n    }\r\n\r\n    static get textureWidth() {\r\n        return utils.getTexture(settings.textures.PIPE).width;\r\n    }\r\n\r\n    static get UP() {\r\n        return 1;\r\n    }\r\n\r\n    static get DOWN() {\r\n        return -1;\r\n    }\r\n}\r\n\r\nmodule.exports = Pipe;\r\n","let settings = require('./settings');\r\n\r\nlet audioPlayer = {\r\n\r\n    /**\r\n     * Use this volume for all audio\r\n     */\r\n    volume: 0.5,\r\n\r\n    audioFragments: {\r\n        'FLAP': 'sfx_wing.ogg',\r\n        'HIT': 'sfx_hit.ogg',\r\n        'DIE': 'sfx_die.ogg',\r\n        'POINT': 'sfx_point.ogg',\r\n        'SWIM': 'sfx_blub.ogg',\r\n        'ENTER_WATER': 'sfx_water-enter.ogg',\r\n        'EXIT_WATER': 'sfx_water-exit.ogg',\r\n    },\r\n\r\n    _audio: [],\r\n\r\n    init() {\r\n        // Todo: Maybe we need to wait with starting the game until these have been loaded\r\n        for (let key in this.audioFragments) {\r\n            let audio = new Audio(settings.soundsPath + this.audioFragments[key]);\r\n            audio.volume = this.volume;\r\n            this._audio[this.audioFragments[key]] = audio;\r\n        }\r\n    },\r\n\r\n    play(audioFragment, callback) {\r\n        if (this._audio[audioFragment].currentTime > 0) {\r\n            this._audio[audioFragment].currentTime = 0;\r\n        }\r\n\r\n        this._audio[audioFragment].play();\r\n\r\n        if (typeof callback === 'function')\r\n            setTimeout(callback, this._audio[audioFragment].duration * 1000);\r\n    }\r\n};\r\n\r\naudioPlayer.init();\r\n\r\n\r\nmodule.exports = audioPlayer;\r\n","let settings = require('./settings.js');\r\nlet utils = require('./utils.js');\r\n\r\nvar background = {\r\n    /**\r\n     * The container that will contain all background tiles lined up\r\n     */\r\n    backgroundSprite: undefined,\r\n\r\n    /**\r\n     * Initialize the background\r\n     * @returns {PIXI.Sprite}\r\n     */\r\n    initialize() {\r\n        let skyTileTexture = utils.getTexture(settings.textures.BACKGROUND);\r\n        this.backgroundSprite = new PIXI.extras.TilingSprite(skyTileTexture, settings.gameWidth, skyTileTexture.height);\r\n        this.backgroundSprite.y = this._getBackgroundSpriteYPosition(skyTileTexture.height);\r\n\r\n        return this.backgroundSprite;\r\n    },\r\n\r\n    /**\r\n     * Update loop of the background\r\n     */\r\n    loop() {\r\n        this.backgroundSprite.tilePosition.x += -settings.backgroundSpeed;\r\n    },\r\n\r\n    /**\r\n     * Get the y position for the background sprite\r\n     * @returns {Number}\r\n     * @private\r\n     */\r\n    _getBackgroundSpriteYPosition(height) {\r\n        return settings.playableAreaAboveWater - height + utils.getTexture(settings.textures.CEILING).height;\r\n    }\r\n};\r\n\r\nmodule.exports = background;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nlet audioPlayer = require('./audioPlayer');\r\n\r\nlet bird = {\r\n    sprite: undefined,\r\n\r\n    /**\r\n     * The velocity of the bird\r\n     */\r\n    velocity: 0,\r\n\r\n    /**\r\n     * Bool if the bird is below the water\r\n     */\r\n    isBelowWater: false,\r\n\r\n    /**\r\n     * The amount of frames the animation has\r\n     */\r\n    animationFrames: 4,\r\n\r\n    birdTextureNamePrefix: 'bird_',\r\n    birdTextureNameSuffix: '.png',\r\n\r\n    initialize() {\r\n        this.sprite = this._setupBirdSprite();\r\n        return this.sprite;\r\n    },\r\n\r\n    loop() {\r\n        if (this.isBelowWater) {\r\n            this.velocity -= settings.waterPushForce;\r\n        } else {\r\n            this.velocity += settings.gravity;\r\n        }\r\n\r\n        this.sprite.y += this.velocity;\r\n        this.sprite.rotation = Math.atan2(this.velocity, settings.forwardSpeed);\r\n    },\r\n\r\n    /**\r\n     * Flap behaviour, is different based on being below or above water\r\n     */\r\n    flap() {\r\n        // Setting to easily test different flap behaviour\r\n        if (settings.shouldBirdFlapResetVelocity) {\r\n            this.velocity = 0;\r\n        }\r\n\r\n        if (this.isBelowWater) {\r\n            this._swim();\r\n        } else {\r\n            this._flap();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Reset the position and velocity of the bird\r\n     */\r\n    reset() {\r\n        this.sprite.x = settings.birdStartPosition.x;\r\n        this.sprite.y = settings.birdStartPosition.y;\r\n        this.velocity = 0;\r\n    },\r\n\r\n    /**\r\n     * Simple helper function to get the top position of the bird\r\n     * @returns {number}\r\n     */\r\n    getTop() {\r\n        return this.sprite.y - this.sprite.height / 2;\r\n    },\r\n\r\n    /**\r\n     * Simple helper function to get the bottom position of the bird\r\n     * @returns {number}\r\n     */\r\n    getBottom() {\r\n        return this.sprite.y + this.sprite.height / 2;\r\n    },\r\n\r\n    /**\r\n     * Simple helper function to get the right position of the bird\r\n     * @returns {number}\r\n     */\r\n    getRight() {\r\n        return this.sprite.x + this.sprite.width / 2;\r\n    },\r\n\r\n    /**\r\n     * Simple helper function to get the left position of the bird\r\n     * @returns {number}\r\n     */\r\n    getLeft() {\r\n        return this.sprite.x - this.sprite.width / 2;\r\n    },\r\n\r\n    getCenter() {\r\n        return {\r\n            x: this.sprite.x,\r\n            y: this.sprite.y\r\n        }\r\n    },\r\n\r\n    /**\r\n     * When the bird enters the water\r\n     */\r\n    enterWater() {\r\n        if (this.isBelowWater) return;\r\n        this.isBelowWater = true;\r\n\r\n        audioPlayer.play(audioPlayer.audioFragments.ENTER_WATER);\r\n    },\r\n\r\n    /**\r\n     * When the bird leaves the water\r\n     */\r\n    leaveWater() {\r\n        if (!this.isBelowWater) return;\r\n        this.isBelowWater = false;\r\n\r\n        audioPlayer.play(audioPlayer.audioFragments.EXIT_WATER);\r\n    },\r\n\r\n    /**\r\n     * Setup the bird sprite with its animations\r\n     * @returns {AnimatedSprite|*}\r\n     * @private\r\n     */\r\n    _setupBirdSprite() {\r\n        let spriteFrames = [];\r\n        for (let i = 0; i < this.animationFrames; i++) {\r\n            spriteFrames.push(utils.getTexture(this.birdTextureNamePrefix + i +  this.birdTextureNameSuffix));\r\n        }\r\n\r\n        let sprite = new PIXI.extras.AnimatedSprite(spriteFrames);\r\n\r\n        sprite.animationSpeed = settings.birdAnimationSpeed;\r\n        sprite.play();\r\n\r\n        sprite.anchor.x = 0.5;\r\n        sprite.anchor.y = 0.5;\r\n\r\n        sprite.x = settings.birdStartPosition.x;\r\n        sprite.y = settings.birdStartPosition.y;\r\n\r\n        return sprite;\r\n    },\r\n\r\n    /**\r\n     * The above water flap behaviour\r\n     * @private\r\n     */\r\n    _flap() {\r\n        audioPlayer.play(audioPlayer.audioFragments.FLAP);\r\n\r\n        this.velocity -= settings.birdFlapVelocity;\r\n    },\r\n\r\n    /**\r\n     * The below water flap (aka swim) behaviour\r\n     * @private\r\n     */\r\n    _swim() {\r\n        audioPlayer.play(audioPlayer.audioFragments.SWIM);\r\n\r\n        this.velocity += settings.birdFlapVelocity;\r\n    }\r\n};\r\n\r\nmodule.exports = bird;\r\n","let setup = require('./setup');\r\n\r\nlet gameOverScreen = require('./gameOverScreen');\r\nlet audioPlayer = require('./audioPlayer');\r\nlet settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nlet background = require('./background');\r\nlet level = require('./level');\r\nlet bird = require('./bird');\r\n\r\nlet game = {\r\n    renderer: undefined,\r\n    stage: undefined,\r\n\r\n    /**\r\n     * Whether the game (loop) has stopped or not\r\n     */\r\n    hasStopped: false,\r\n\r\n    /**\r\n     * Start the game\r\n     */\r\n    start() {\r\n        this.renderer = setup.renderer();\r\n        setup.loadAssets(this.initialize.bind(this));\r\n    },\r\n\r\n    /**\r\n     * Initialize all required parts of the game\r\n     */\r\n    initialize() {\r\n        this.stage = new PIXI.Container();\r\n\r\n        this.stage.addChild(background.initialize());\r\n        this.stage.addChild(level.initialize());\r\n        this.stage.addChild(bird.initialize());\r\n\r\n        this.stage.addChild(this._getWaterSprite());\r\n\r\n        let onRestartClick = this._clickRestart.bind(this);\r\n        this.stage.addChild(gameOverScreen.initialize(onRestartClick));\r\n\r\n        this.renderer.render(this.stage);\r\n\r\n        this._setEvents();\r\n\r\n        this.loop();\r\n    },\r\n\r\n    /**\r\n     * The game loop\r\n     */\r\n    loop() {\r\n        requestAnimationFrame(this.loop.bind(this));\r\n\r\n        // This causes the game loop to freeze. Is used when the players hits something and a menu is shown to _restart\r\n        if (this.hasStopped) return;\r\n\r\n        background.loop();\r\n        level.loop();\r\n        bird.loop();\r\n\r\n        this._handleCollision();\r\n\r\n        this.renderer.render(this.stage);\r\n    },\r\n\r\n    /**\r\n     * Trigger game over happening\r\n     * @private\r\n     */\r\n    _gameOver() {\r\n        this._stop();\r\n        this._playDieAudio();\r\n\r\n        // Show game over screen\r\n        gameOverScreen.updateScores(level.score, level.bestScore);\r\n        gameOverScreen.show();\r\n    },\r\n\r\n    /**\r\n     * Function to be called when _restart is clicked from the game over screen\r\n     * @private\r\n     */\r\n    _clickRestart() {\r\n        this._restart();\r\n        gameOverScreen.hide();\r\n    },\r\n\r\n    /**\r\n     * Stop the game\r\n     * @private\r\n     */\r\n    _stop() {\r\n        this.hasStopped = true;\r\n    },\r\n\r\n    /**\r\n     * Continue the game after stopping\r\n     * @private\r\n     */\r\n    _restart() {\r\n        level.reset();\r\n        bird.reset();\r\n\r\n        this.hasStopped = false;\r\n    },\r\n\r\n    /**\r\n     * Handle collision between the bird and 'obstacles'\r\n     * @private\r\n     */\r\n    _handleCollision() {\r\n        // Check if the bird is below or underneath the water\r\n        if (bird.getCenter().y <= level.getWaterLevel() && bird.isBelowWater) {\r\n            bird.leaveWater();\r\n        } else if (bird.getCenter().y > level.getWaterLevel() && !bird.isBelowWater) {\r\n            bird.enterWater();\r\n        }\r\n\r\n        // Ceiling collision\r\n        if (bird.getTop() <= level.ceilingSprite.y + level.ceilingSprite.height) {\r\n            this._gameOver();\r\n        }\r\n\r\n        // Floor collision\r\n        if (bird.getBottom() >= level.ceilingSprite.y + level.ceilingSprite.height + settings.playableAreaAboveWater + settings.playableAreaBelowWater) {\r\n            this._gameOver();\r\n        }\r\n\r\n        if (level.pipeCollision(bird)) {\r\n            this._gameOver();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Play the audio for when the player dies\r\n     * @private\r\n     */\r\n    _playDieAudio() {\r\n        audioPlayer.play(audioPlayer.audioFragments.HIT,\r\n            audioPlayer.play.bind(audioPlayer, audioPlayer.audioFragments.DIE)\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Set the required events for interacting with the game\r\n     * @private\r\n     */\r\n    _setEvents() {\r\n        window.addEventListener(\"keydown\", (e) => {\r\n            if (e.keyCode != 32) return; // Not spacebar\r\n            if (this.hasStopped) {\r\n                this._clickRestart();\r\n                return;\r\n            }\r\n            bird.flap();\r\n        }, false);\r\n\r\n        if (\"ontouchstart\" in window) {\r\n            window.addEventListener(\"touchstart\", () => {\r\n                if (this.hasStopped) return;\r\n                bird.flap();\r\n            });\r\n        } else {\r\n            window.addEventListener(\"mousedown\", () => {\r\n                if (this.hasStopped) return;\r\n                bird.flap();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Create and get the tiled sprite for the water\r\n     * @returns {TilingSprite|PIXI.TilingSprite|{enumerable, get}|*}\r\n     * @private\r\n     */\r\n    _getWaterSprite() {\r\n        let waterTexture = utils.getTexture(settings.textures.WATER);\r\n        let waterSprite = new PIXI.extras.TilingSprite(waterTexture, settings.gameWidth, settings.playableAreaBelowWater);\r\n        waterSprite.y = utils.getTexture(settings.textures.CEILING).height + settings.playableAreaAboveWater;\r\n\r\n        return waterSprite;\r\n    }\r\n};\r\n\r\nmodule.exports = game;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils');\r\n\r\nlet gameOverScreen = {\r\n\r\n    /**\r\n     * The callback when the _restart button is clicked\r\n     */\r\n    onClickRestart: undefined,\r\n\r\n    /**\r\n     * The container that will hold the game over container\r\n     */\r\n    container: undefined,\r\n\r\n    /**\r\n     * The container that will hold the the scores and the game over sprite\r\n     */\r\n    gameOverContainer: undefined,\r\n\r\n    scoreYPosition: 93,\r\n    bestScoreYPosition: 135,\r\n    restartButtonYPosition: 190,\r\n    gameOverContainerXPosition: 150,\r\n\r\n    /**\r\n     * Because the score box is not perfectly centered we add some offset\r\n     */\r\n    elementsXOffset: 2,\r\n\r\n    /**\r\n     * Create the game over screen, should only be called once\r\n     */\r\n    initialize(callback) {\r\n        this._setRestartCallback(callback);\r\n\r\n        this.container = new PIXI.Container();\r\n\r\n        this.container.y = this._getContainerYPosition();\r\n        this.container.x = this.gameOverContainerXPosition;\r\n\r\n        this.gameOverContainer = new PIXI.Sprite(utils.getTexture(settings.textures.GAME_OVER));\r\n\r\n        this._renderScores(0, 0);\r\n\r\n        let restartButton = new PIXI.Sprite(utils.getTexture(settings.textures.RESTART));\r\n        restartButton.x = this.gameOverContainer.width / 2 - restartButton.width / 2 + this.elementsXOffset;\r\n        restartButton.y = this.restartButtonYPosition;\r\n        restartButton.interactive = true;\r\n        restartButton.buttonMode = true;\r\n        restartButton.defaultCursor = 'pointer';\r\n\r\n        restartButton.addListener(\"click\", this.onClickRestart);\r\n\r\n        if (\"ontouchstart\" in window) {\r\n            restartButton.addListener(\"touchstart\", this.onClickRestart);\r\n        }\r\n\r\n        this.gameOverContainer.addChild(restartButton);\r\n\r\n        this.container.addChild(this.gameOverContainer);\r\n\r\n        this.hide();\r\n\r\n        return this.container;\r\n    },\r\n\r\n    /**\r\n     * Update the game over screen with the new scores\r\n     */\r\n    updateScores(score, bestScore) {\r\n        this._clearScores();\r\n        this._renderScores(score, bestScore);\r\n    },\r\n\r\n    /**\r\n     * Hide the game over screen\r\n     */\r\n    hide() {\r\n        this.gameOverContainer.visible = false;\r\n    },\r\n\r\n    /**\r\n     * Show the game over screen\r\n     */\r\n    show() {\r\n        this.gameOverContainer.visible = true;\r\n    },\r\n\r\n    /**\r\n     * Set the callback for when the _restart button has been pressed\r\n     * @param callback\r\n     * @private\r\n     */\r\n    _setRestartCallback(callback) {\r\n        if (typeof callback !== 'function') throw new Error('Supplied callback is not a function');\r\n\r\n        this.onClickRestart = callback;\r\n    },\r\n\r\n    /**\r\n     * @param score\r\n     * @param bestScore\r\n     * @private\r\n     */\r\n    _renderScores(score, bestScore) {\r\n        this.scoreSprite = utils.scoreToSprites(score, utils.scoreSize.SMALL);\r\n        this.scoreSprite.x = this.gameOverContainer.width / 2 - this.scoreSprite.width / 2 + this.elementsXOffset;\r\n        this.scoreSprite.y = this.scoreYPosition;\r\n\r\n        this.bestScoreSprite = utils.scoreToSprites(bestScore, utils.scoreSize.SMALL);\r\n        this.bestScoreSprite.x = this.gameOverContainer.width / 2 - this.bestScoreSprite.width / 2 + this.elementsXOffset;\r\n        this.bestScoreSprite.y = this.bestScoreYPosition;\r\n\r\n        this.gameOverContainer.addChild(this.scoreSprite);\r\n        this.gameOverContainer.addChild(this.bestScoreSprite);\r\n    },\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    _clearScores() {\r\n        this.gameOverContainer.removeChild(this.scoreSprite);\r\n        this.gameOverContainer.removeChild(this.bestScoreSprite);\r\n    },\r\n\r\n    /**\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    _getContainerYPosition() {\r\n        let ceilingHeight = utils.getTexture(settings.textures.CEILING).height;\r\n        let gameOverScreenHeight = utils.getTexture(settings.textures.GAME_OVER).height;\r\n        return (ceilingHeight + settings.playableAreaAboveWater + settings.playableAreaBelowWater) / 2 - gameOverScreenHeight / 2;\r\n    }\r\n\r\n};\r\n\r\nmodule.exports = gameOverScreen;\r\n","let settings = require('./settings');\r\nlet utils = require('./utils.js');\r\n\r\nlet audioPlayer = require('./audioPlayer');\r\n\r\nlet Pipe = require('./Pipe');\r\n\r\nlet level = {\r\n    /**\r\n     * The container that will contain everything that needs to be moved towards the player\r\n     */\r\n    container: undefined,\r\n\r\n    /**\r\n     * Tiled floor sprite\r\n     */\r\n    floorSprite: undefined,\r\n\r\n    /**\r\n     * Tiled ceiling sprite\r\n     */\r\n    ceilingSprite: undefined,\r\n\r\n    /**\r\n     * Container that will contain all pipes\r\n     */\r\n    pipesContainer: undefined,\r\n\r\n    firstPipeFacing: Pipe.UP,\r\n\r\n    nextPipeFacing: 0,\r\n    placedPipesCount: 0,\r\n\r\n    playerInsidePipe: false,\r\n\r\n    score: 0,\r\n    bestScore: 0,\r\n    scoreContainer: undefined,\r\n\r\n    initialize() {\r\n        this.container = new PIXI.Container();\r\n\r\n        this.container.addChild(this._createCeiling());\r\n        this.container.addChild(this._createFloor());\r\n\r\n        this.container.addChild(this._createInitialPipes());\r\n\r\n        this.container.addChild(this._createScoreContainer());\r\n\r\n        return this.container;\r\n    },\r\n\r\n    loop() {\r\n        this.ceilingSprite.tilePosition.x += -settings.forwardSpeed;\r\n        this.floorSprite.tilePosition.x += -settings.forwardSpeed;\r\n\r\n        // Pipes stuff\r\n        this.pipesContainer.x += -settings.forwardSpeed;\r\n\r\n        // Remove pipes when they're off screen\r\n        if (this.pipesContainer.children.length > 0) {\r\n\r\n            if (this.pipesContainer.x < -this.pipesContainer.children[0].x - Pipe.textureWidth) {\r\n                this.pipesContainer.removeChild(this.pipesContainer.children[0]);\r\n                this._placeNewPipe(this.placedPipesCount);\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Reset the state of the level\r\n     */\r\n    reset() {\r\n        this.score = 0;\r\n        this.scoreContainer.removeChild(this.scoreContainer.children[0]);\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n\r\n        this.pipesContainer.x = 0;\r\n        this.pipesContainer.children.splice(0);\r\n        this.playerInsidePipe = false;\r\n        this.nextPipeFacing = this.firstPipeFacing;\r\n        this.placedPipesCount = 0;\r\n        this.container.addChild(this._createInitialPipes());\r\n    },\r\n\r\n    /**\r\n     * Get the y position of the water\r\n     */\r\n    getWaterLevel() {\r\n        return settings.playableAreaAboveWater + utils.getTexture(settings.textures.CEILING).height;\r\n    },\r\n\r\n    pipeCollision(bird) {\r\n        // Because of square collision it can feel unfair when hitting the sides of the pipes while at an angle\r\n        // Which often happens when diving through the gap. To make things a bit fairer, added a small margin;\r\n        let collisionMargin = settings.pipeCollisionSidesMargin;\r\n\r\n        let left = this.pipesContainer.x + this.pipesContainer.children[0].x + collisionMargin;\r\n        let right = left + utils.getTexture(settings.textures.PIPE).width - collisionMargin;\r\n        \r\n        // The bird is in the left/right boundaries of the first pipe\r\n        if (bird.getRight() > left && bird.getLeft() < right) {\r\n            this.playerInsidePipe = true;\r\n\r\n            // The bird is above the gap!\r\n            if (bird.getTop() < this.pipesContainer.children[0].gap.top - settings.pipeCollisionGapMargin || bird.getBottom() > this.pipesContainer.children[0].gap.bottom + settings.pipeCollisionGapMargin) {\r\n                return true;\r\n            }\r\n        } else if (this.playerInsidePipe) {\r\n            // Player has passed the pipe\r\n            this._increaseScore();\r\n            this.playerInsidePipe = false;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Create the tiled ceiling sprite\r\n     * @returns {PIXI.extras.TilingSprite}\r\n     * @private\r\n     */\r\n    _createCeiling() {\r\n        let ceilingTexture = utils.getTexture(settings.textures.CEILING);\r\n\r\n        this.ceilingSprite = new PIXI.extras.TilingSprite(ceilingTexture, settings.gameWidth, ceilingTexture.height);\r\n\r\n        return this.ceilingSprite;\r\n    },\r\n\r\n    /**\r\n     * Create the tiled floor sprite\r\n     * @returns {PIXI.extras.TilingSprite}\r\n     * @private\r\n     */\r\n    _createFloor() {\r\n        let floorTexture = utils.getTexture(settings.textures.FLOOR);\r\n\r\n        this.floorSprite = new PIXI.extras.TilingSprite(floorTexture, settings.gameWidth, floorTexture.height);\r\n        this.floorSprite.y = settings.playableAreaAboveWater + settings.playableAreaBelowWater + utils.getTexture(settings.textures.CEILING).height;\r\n\r\n        return this.floorSprite;\r\n    },\r\n\r\n    /**\r\n     * @returns {PIXI.Container}\r\n     * @private\r\n     */\r\n    _createInitialPipes() {\r\n        this.nextPipeFacing = this.firstPipeFacing;\r\n        this.pipesContainer = new PIXI.Container();\r\n\r\n        let startingPipesCount = Math.ceil(settings.gameWidth / settings.pipeDistance);\r\n\r\n        for (let i = 0; i < startingPipesCount; i++) {\r\n            this._placeNewPipe(i);\r\n        }\r\n\r\n        return this.pipesContainer;\r\n    },\r\n\r\n    /**\r\n     * @returns {PIXI.Container}\r\n     * @private\r\n     */\r\n    _createScoreContainer() {\r\n        this.scoreContainer = new PIXI.Container();\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n\r\n        this.scoreContainer.x = settings.scorePosition.x;\r\n        this.scoreContainer.y = utils.getTexture(settings.textures.CEILING).height + settings.scorePosition.y;\r\n\r\n        return this.scoreContainer;\r\n    },\r\n\r\n    /**\r\n     * Create a new pipe, the position depends on the number\r\n     * @param number\r\n     * @private\r\n     */\r\n    _placeNewPipe(number) {\r\n        let height = (number === 0) ? settings.firstPipeHeight : this._getRandomPipeHeight();\r\n\r\n        let pipe = this._createPipe(height, this.nextPipeFacing);\r\n        pipe.container.x = settings.firstPipeDistance + settings.pipeDistance * number;\r\n        this.pipesContainer.addChild(pipe.container);\r\n\r\n        this.nextPipeFacing *= -1;\r\n        this.placedPipesCount++;\r\n    },\r\n\r\n    _createPipe(height, direction) {\r\n        return new Pipe(height, direction);\r\n    },\r\n\r\n    _increaseScore() {\r\n        audioPlayer.play(audioPlayer.audioFragments.POINT);\r\n        this.score++;\r\n\r\n        if (this.score > this.bestScore) this.bestScore = this.score;\r\n\r\n        // Because we put all digits inside one container, we only have to remove on child\r\n        this.scoreContainer.removeChild(this.scoreContainer.children[0]);\r\n\r\n        this.scoreContainer.addChild(utils.scoreToSprites(this.score, utils.scoreSize.BIG));\r\n   },\r\n\r\n    /**\r\n     * Get a random height for the pipe\r\n     * @returns {number}\r\n     * @private\r\n     */\r\n    _getRandomPipeHeight() {\r\n        return Math.random() * (settings.maxPipeHeight - settings.minPipeHeight) + settings.minPipeHeight;\r\n    },\r\n};\r\n\r\nmodule.exports = level;\r\n","const settings = {\r\n    /**\r\n     * The location of the assets json\r\n     */\r\n    assetFile: \"assets/assets.json\",\r\n\r\n    soundsPath: \"assets/sounds/\",\r\n\r\n    /**\r\n     * The area that is available above the water\r\n     */\r\n    playableAreaAboveWater: 250,\r\n\r\n    /**\r\n     * The area that is available below the water\r\n     */\r\n    playableAreaBelowWater: 250,\r\n\r\n    /**\r\n     * The width of the game, filled during init currently\r\n     */\r\n    gameWidth: 0,\r\n\r\n    /**\r\n     * The speed at which objects move towards the player\r\n     */\r\n    forwardSpeed: 5,\r\n\r\n    /**\r\n     * The speed at which the background moves\r\n     */\r\n    backgroundSpeed: 2,\r\n\r\n    /**\r\n     * The amount of gravity added to the velocity of the player while above the water\r\n     */\r\n    gravity: 0.3,\r\n\r\n    /**\r\n     * The amount of upward force added to the velocity of the player while below the water\r\n     */\r\n    waterPushForce: 0.3,\r\n\r\n    /**\r\n     * The amount of upward velocity is added to the player on 'flapping'.\r\n     */\r\n    birdFlapVelocity: 4.5,\r\n\r\n    /**\r\n     * The speed of the bird animation\r\n     */\r\n    birdAnimationSpeed: 0.2,\r\n\r\n    /**\r\n     * Starting position of the bird\r\n     */\r\n    birdStartPosition: {\r\n        x: 100,\r\n        y: 150,\r\n    },\r\n\r\n    /**\r\n     * The vertical gaps in the pipes for the player to fly through\r\n     */\r\n    pipeGapSize: 100,\r\n\r\n    /**\r\n     * The distance to the first pipe\r\n     */\r\n    firstPipeDistance: 800,\r\n\r\n    /**\r\n     * The distance between each pipe\r\n     */\r\n    pipeDistance: 400,\r\n\r\n    /**\r\n     * The min height of a pipe (handle with care)\r\n     */\r\n    minPipeHeight: 275,\r\n\r\n    /**\r\n     * The max height of a pipe (handle with care)\r\n     */\r\n    maxPipeHeight: 375,\r\n\r\n    /**\r\n     * The height of the first pipe\r\n     */\r\n    firstPipeHeight: 320,\r\n\r\n    pipeCollisionSidesMargin: 6,\r\n\r\n    pipeCollisionGapMargin: 3,\r\n\r\n    /**\r\n     * The position of the score\r\n     */\r\n    scorePosition: {\r\n        x: 10,\r\n        y: 10 // Offset from the 'ceiling'\r\n    },\r\n\r\n    /**\r\n     * If vertical velocity of the player should be reset before applying the flap velocity\r\n     */\r\n    shouldBirdFlapResetVelocity: true,\r\n\r\n    textures: {\r\n        'BACKGROUND': 'sky.png',\r\n        'FLOOR': 'land.png',\r\n        'CEILING': 'ceiling.png',\r\n        'PIPE': 'pipe.png',\r\n        'PIPE_UP': 'pipe-up.png',\r\n        'PIPE_DOWN': 'pipe-down.png',\r\n        'WATER': 'water.png',\r\n        'GAME_OVER': 'scoreboard.png',\r\n        'RESTART': 'replay.png',\r\n        'BIG_0': 'font_big_0.png',\r\n        'BIG_1': 'font_big_1.png',\r\n        'BIG_2': 'font_big_2.png',\r\n        'BIG_3': 'font_big_3.png',\r\n        'BIG_4': 'font_big_4.png',\r\n        'BIG_5': 'font_big_5.png',\r\n        'BIG_6': 'font_big_6.png',\r\n        'BIG_7': 'font_big_7.png',\r\n        'BIG_8': 'font_big_8.png',\r\n        'BIG_9': 'font_big_9.png',\r\n        'SMALL_0': 'font_small_0.png',\r\n        'SMALL_1': 'font_small_1.png',\r\n        'SMALL_2': 'font_small_2.png',\r\n        'SMALL_3': 'font_small_3.png',\r\n        'SMALL_4': 'font_small_4.png',\r\n        'SMALL_5': 'font_small_5.png',\r\n        'SMALL_6': 'font_small_6.png',\r\n        'SMALL_7': 'font_small_7.png',\r\n        'SMALL_8': 'font_small_8.png',\r\n        'SMALL_9': 'font_small_9.png',\r\n    },\r\n\r\n    init() {\r\n        this.gameWidth = window.innerWidth;\r\n    }\r\n};\r\n\r\nsettings.init();\r\n\r\nmodule.exports = settings;\r\n","let settings = require('./settings');\r\n\r\nlet setup = {\r\n    /**\r\n     * Set up the renderer\r\n     * @returns {PIXI.WebGLRenderer|PIXI.CanvasRenderer}\r\n     */\r\n    renderer() {\r\n        let renderer = PIXI.autoDetectRenderer(settings.gameWidth, window.innerHeight);\r\n        renderer.view.style.position = \"absolute\";\r\n        renderer.view.style.display = \"block\";\r\n        renderer.backgroundColor = 0x4ec0ca;\r\n        renderer.autoResize = true;\r\n\r\n        document.body.appendChild(renderer.view);\r\n\r\n        return renderer;\r\n    },\r\n\r\n    /**\r\n     * Load the assets\r\n     * @param callback action to perform after assets have been loaded\r\n     */\r\n    loadAssets(callback) {\r\n        if (typeof callback !== 'function') throw new Error('Callback must be a function');\r\n\r\n        PIXI.loader.add(settings.assetFile).load(callback);\r\n    }\r\n};\r\n\r\nmodule.exports = setup;\r\n","let settings = require('./settings');\r\n\r\nlet utils = {\r\n\r\n    scoreSize: {\r\n        'SMALL': 0,\r\n        'BIG': 1\r\n    },\r\n\r\n    /**\r\n     * Get a texture from the pixi loader by name\r\n     * @param name texture name, with extension\r\n     * @returns {*|PIXI.Texture|FrameObject}\r\n     */\r\n    getTexture(name) {\r\n        return PIXI.loader.resources[settings.assetFile].textures[name]\r\n    },\r\n\r\n    /**\r\n     * Generate score sprites based on passed score\r\n     * @param score\r\n     * @param size\r\n     * @returns {Container|*}\r\n     */\r\n    scoreToSprites(score, size) {\r\n        let stringScore = score.toString();\r\n\r\n        let texturePrefix = size === this.scoreSize.BIG ? 'BIG_' : 'SMALL_';\r\n        let letterSpacing = size === this.scoreSize.BIG ? 25 : 10;\r\n\r\n        let digitsContainer = new PIXI.Container();\r\n\r\n        for (let i = 0, len = stringScore.length; i < len; i++) {\r\n            let digit = new PIXI.Sprite(this.getTexture(settings.textures[texturePrefix + stringScore.charAt(i)]));\r\n            digit.x = i * letterSpacing;\r\n            digitsContainer.addChild(digit)\r\n        }\r\n\r\n        return digitsContainer;\r\n    }\r\n};\r\n\r\nmodule.exports = utils;\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}